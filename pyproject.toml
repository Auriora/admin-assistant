[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "admin-assistant"
version = "0.1.0alpha1"
description = "Admin Assistant CLI and core"
authors = [{ name = "Bruce Cherrington", email = "aurioraproject@gmail.com" }]
readme = "README.md"
license = { text = "GPL-3.0-or-later" }
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Natural Language :: English",
]
dependencies = [
    # Core CLI and UI
    "typer==0.16.1",
    "rich==14.2.0",

    # Web Framework
    "Flask==3.1.2",
    "Flask-SQLAlchemy==3.1.1",
    "Flask-Migrate==4.0.7",
    "Flask-Login==0.6.3",
    "Flask-APScheduler==1.13.1",

    # API Integrations
    "msgraph-sdk==1.46.0",
    "xero-python==9.1.0",
    "openai==2.5.0",
    "googlemaps==4.10.0",

    # Authentication & Security
    "msal==1.34.0",
    "requests-oauthlib==2.0.0",

    # Database & Storage
    "sqlalchemy==2.0.44",
    "sqlalchemy-utils==0.42.0",
    "asyncpg==0.30.0",
    "alembic==1.17.0",

    # Utilities
    "python-dotenv==1.1.1",
    "pytz==2025.2",
    "apprise==1.9.5",
    "nest_asyncio==1.6.0",

    # Observability
    "opentelemetry-api==1.38.0",
    "opentelemetry-sdk==1.38.0",
    "opentelemetry-instrumentation-flask==0.59b0",
    "opentelemetry-exporter-otlp==1.38.0",
]

[project.optional-dependencies]
dev = [
    # Testing framework
    "pytest==8.4.2",
    "pytest-cov==7.0.0",
    "pytest-mock==3.15.1",
    "pytest-asyncio==1.2.0",
    "pytest-memray==1.8.0",

    # System monitoring
    "psutil==7.1.1",

    # Version management
    "bump2version==1.0.1",

    # Linters & type checking
    "flake8",
    "black",
    "isort",
    "mypy",

    # Security scanners
    "safety",
    "bandit",
    "semgrep",
]
# Focused extras for specific tasks
lint = [
    "flake8",
    "black",
    "isort",
    "mypy",
]
security = [
    "safety",
    "bandit",
    "semgrep",
]

test = [
    # Testing framework (alias for dev)
    "pytest==8.4.2",
    "pytest-cov==7.0.0",
    "pytest-mock==3.15.1",
    "pytest-asyncio==1.2.0",
]

[project.urls]
Homepage = "https://github.com/auriora/admin-assistant"
"Bug Reports" = "https://github.com/auriora/admin-assistant/issues"
Source = "https://github.com/auriora/admin-assistant"
Documentation = "https://github.com/auriora/admin-assistant/tree/main/docs"

[project.scripts]
admin-assistant = "cli.main:app"
aa = "cli.main:app"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
