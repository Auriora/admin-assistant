[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "admin-assistant"
version = "0.1.0alpha1"
description = "Admin Assistant CLI and core"
authors = [{ name = "Bruce Cherrington", email = "aurioraproject@gmail.com" }]
readme = "README.md"
license = { text = "GPL-3.0-or-later" }
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Natural Language :: English",
]
dependencies = [
    # Core CLI and UI
    "typer[all]~=0.16.0",
    "rich~=14.0.0",

    # Web Framework
    "Flask~=3.1.1",
    "Flask-SQLAlchemy~=3.1.1",
    "Flask-Migrate~=4.0.5",
    "Flask-Login~=0.6.3",
    "Flask-APScheduler~=1.13.1",

    # API Integrations
    "msgraph-sdk~=1.32.0",
    "xero-python~=8.1.0",
    "openai~=1.108.1",
    "googlemaps~=4.10.0",

    # Authentication & Security
    "msal~=1.28.0",
    "requests-oauthlib~=2.0.0",

    # Database & Storage
    "sqlalchemy[asyncio]~=2.0.0",
    "sqlalchemy-utils~=0.41.2",
    "asyncpg~=0.30.0",
    "alembic[async]~=1.16.1",

    # Utilities
    "python-dotenv~=1.1.0",
    "pytz~=2025.2",
    "apprise~=1.9.3",
    "nest_asyncio~=1.6.0",

    # Observability
    "opentelemetry-api~=1.34.0",
    "opentelemetry-sdk~=1.34.0",
    "opentelemetry-instrumentation-flask~=0.54b0",
    "opentelemetry-exporter-otlp~=1.34.0",
]

[project.optional-dependencies]
dev = [
    # Testing framework
    "pytest~=8.4.0",
    "pytest-cov~=6.1.1",
    "pytest-mock~=3.14.1",
    "pytest-asyncio~=0.26.0",
    "pytest-memray~=1.7.0",

    # System monitoring
    "psutil~=6.1.0",

    # Version management
    "bump2version~=1.0.1",
]
test = [
    # Testing framework (alias for dev)
    "pytest~=8.4.0",
    "pytest-cov~=6.1.1",
    "pytest-mock~=3.14.1",
    "pytest-asyncio~=0.26.0",
]

[project.urls]
Homepage = "https://github.com/auriora/admin-assistant"
"Bug Reports" = "https://github.com/auriora/admin-assistant/issues"
Source = "https://github.com/auriora/admin-assistant"
Documentation = "https://github.com/auriora/admin-assistant/tree/main/docs"

[project.scripts]
admin-assistant = "cli.main:app"
aa = "cli.main:app"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
